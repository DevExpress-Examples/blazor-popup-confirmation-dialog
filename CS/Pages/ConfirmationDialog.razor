@using DevExpress.Blazor
@implements IDisposable

<DxPopup @bind-Visible="@ConfirmationShown" 
         HeaderText="@HeaderText"
         HeaderCssClass="confirmation-dialog-header"
         ShowCloseButton="false" 
         CloseOnOutsideClick="false" 
         CloseOnEscape="false" 
         Width="400px">
    <BodyContentTemplate>
        <div class="confirmation-dialog-content">
            <DxButton Text="Yes" Click="YesClick" RenderStyle="ButtonRenderStyle.Primary"></DxButton>
            <DxButton Text="No" Click="NoClick" RenderStyle="ButtonRenderStyle.Secondary"></DxButton>
        </div>
    </BodyContentTemplate>
</DxPopup>

@code {
    bool ConfirmationShown { get; set; } = false;
    string HeaderText { get; set; } = string.Empty;
    string BodyText { get; set; } = string.Empty;
    TaskCompletionSource<bool> tcs;

    public Task<bool> ConfirmOperation(string headerText, string bodyText) {
        HeaderText = headerText;
        BodyText = bodyText;
        ConfirmationShown = true;
        InvokeAsync(StateHasChanged);

        tcs = new TaskCompletionSource<bool>();
        tcs.Task.ContinueWith(_ => {
            ConfirmationShown = false;
        });
        return tcs.Task;
    }
    private void YesClick() {
        tcs.SetResult(true);
    }
    private void NoClick() {
        tcs.SetResult(false);
    }
    public void Dispose() {
        tcs = null;
    }
}

